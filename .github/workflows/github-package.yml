# Publish to GitHub Packages
name: Publish to GitHub Packages

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-github-packages:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build:tsup

      - name: Run tests (if available)
        run: |
          if npm run test --dry-run 2>/dev/null; then
            npm test
          else
            echo "No test script found, skipping tests"
          fi

      - name: Configure package for GitHub Packages
        run: |
          # Backup original package.json
          cp package.json package.json.backup

          # Get current package name
          CURRENT_NAME=$(node -p "require('./package.json').name")

          # Create scoped name for GitHub Packages
          if [[ $CURRENT_NAME == @* ]]; then
            SCOPED_NAME="$CURRENT_NAME"
          else
            SCOPED_NAME="@${{ github.repository_owner }}/$CURRENT_NAME"
          fi

          # Update package.json for GitHub Packages
          node -e "
            const fs = require('fs');
            const pkg = require('./package.json');
            pkg.name = '$SCOPED_NAME';
            pkg.repository = pkg.repository || 'https://github.com/${{ github.repository }}';
            pkg.publishConfig = {
              '@${{ github.repository_owner }}:registry': 'https://npm.pkg.github.com'
            };
            fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

          echo "Package configured for GitHub Packages:"
          echo "Name: $SCOPED_NAME"

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Get package info
        id: package_info
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          ORIGINAL_NAME=$(node -p "require('./package.json.backup').name")
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "ORIGINAL_NAME=$ORIGINAL_NAME" >> $GITHUB_ENV

      - name: Success notification
        run: |
          echo "âœ… Successfully published to GitHub Packages!"
          echo "ðŸ“¦ Package: ${{ env.PACKAGE_NAME }}@${{ env.PACKAGE_VERSION }}"
          echo "ðŸ”— GitHub Packages URL: https://github.com/${{ github.repository }}/packages"
          echo ""
          echo "ðŸ“‹ Install commands:"
          echo "# Configure registry first:"
          echo "echo \"@${{ github.repository_owner }}:registry=https://npm.pkg.github.com\" >> .npmrc"
          echo ""
          echo "# Then install:"
          echo "npm install ${{ env.PACKAGE_NAME }}@${{ env.PACKAGE_VERSION }}"
