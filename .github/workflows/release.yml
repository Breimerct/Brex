# Create GitHub Release with assets
name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build:tsup

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Get previous version for changelog
        id: prev_version
        run: |
          PREV_VERSION=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

      - name: Generate release notes
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "## 🚀 What's Changed" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV

          # Get commits since last version
          if [ -n "${{ env.PREV_VERSION }}" ]; then
            echo "### Commits since ${{ env.PREV_VERSION }}:" >> $GITHUB_ENV
            git log ${{ env.PREV_VERSION }}..HEAD --pretty=format:"- %s (%h)" --reverse >> $GITHUB_ENV
          else
            echo "### All commits:" >> $GITHUB_ENV
            git log --pretty=format:"- %s (%h)" --reverse >> $GITHUB_ENV
          fi

          echo "" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "## 📦 Installation" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### From NPM (recommended)" >> $GITHUB_ENV
          echo '```bash' >> $GITHUB_ENV
          echo "npm install $(node -p "require('./package.json').name")@${{ env.VERSION }}" >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### From GitHub Packages" >> $GITHUB_ENV
          echo '```bash' >> $GITHUB_ENV
          echo "# Configure .npmrc first:" >> $GITHUB_ENV
          echo "echo \"@${{ github.repository_owner }}:registry=https://npm.pkg.github.com\" >> .npmrc" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "# Then install:" >> $GITHUB_ENV
          echo "npm install @${{ github.repository_owner }}/$(node -p "require('./package.json').name")@${{ env.VERSION }}" >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "## 🌐 CDN Usage" >> $GITHUB_ENV
          echo '```html' >> $GITHUB_ENV
          echo '<script src="https://cdn.jsdelivr.net/npm/$(node -p "require('\''./package.json'\'').name")@${{ env.VERSION }}/dist/index.js"></script>' >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "## 📋 Package Links" >> $GITHUB_ENV
          echo "- 📦 [NPM Package](https://www.npmjs.com/package/$(node -p "require('./package.json').name"))" >> $GITHUB_ENV
          echo "- 📦 [GitHub Packages](https://github.com/${{ github.repository }}/packages)" >> $GITHUB_ENV
          echo "- 🌐 [CDN](https://cdn.jsdelivr.net/npm/$(node -p "require('./package.json').name")@${{ env.VERSION }}/)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/**/*
            package.json
            README.md
            LICENSE*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Success notification
        run: |
          echo "✅ Release created successfully!"
          echo "🏷️ Release: https://github.com/${{ github.repository }}/releases/tag/${{ env.TAG_NAME }}"
          echo "📦 Version: ${{ env.VERSION }}"
          echo ""
          echo "🚀 Release includes:"
          echo "- 📝 Automated changelog"
          echo "- 📁 Built distribution files"
          echo "- 📋 Installation instructions"
          echo "- 🔗 Package links"
